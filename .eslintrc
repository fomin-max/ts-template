{
  "rules": {
    // without required default props
    "react/require-default-props": 0,
    "react/jsx-one-expression-per-line": "off",
    "react/jsx-props-no-spreading": "off",

    // withous default export
    "import/prefer-default-export": "off",

    "object-curly-newline": "off",
    "operator-linebreak": "off",

    // no accessibility
    "jsx-a11y/click-events-have-key-events": "off",
    "jsx-a11y/no-static-element-interactions": "off",
    "jsx-a11y/anchor-is-valid": "off",
    "jsx-a11y/label-has-for": "off",
    "jsx-a11y/label-has-associated-control": "off",

    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "off",
    "implicit-arrow-linebreak": "off",
    "@typescript-eslint/camelcase": "off",
    "import/no-cycle": "off",
    "prettier/prettier": "off",
    // use a comma as a separator for interface
    "@typescript-eslint/member-delimiter-style": ["error", {
      "multiline": {
        "delimiter": "comma",
        "requireLast": true
      },
      "singleline": {
        "delimiter": "comma",
        "requireLast": false
      }
    }],
    // allow empty interfaces
    "@typescript-eslint/no-empty-interface": "off",

    // required function return type
    "@typescript-eslint/explicit-function-return-type": [
      "error",
      {"allowExpressions": true, "allowTypedFunctionExpressions": true}
    ],
    "@typescript-eslint/indent": "off",

    // allow unused constants
    "@typescript-eslint/no-unused-vars": "off",

    "@typescript-eslint/no-object-literal-type-assertion": "off"
  },

  "plugins": [
    "@typescript-eslint",
    "react-hooks",
    "optimize-regex"
  ],

  "extends": [
    "plugin:@typescript-eslint/recommended",
    "airbnb-typescript"
  ],

  "env": {
    "browser": true
  },

  "globals": {
    "it": false,
    "expect": false,
    "describe": false
  }
}
